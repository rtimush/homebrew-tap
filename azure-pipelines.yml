trigger:
  batch: true
  branches:
    include:
      - staging
pr:
  - staging
jobs:
  - job: Build
    strategy:
      matrix:
        high_sierra:
          imageName: macos-10.13
          xcode.version: 10.1
        mojave:
          imageName: macos-10.14
          xcode.version: 11.3
        ubuntu:
          imageName: ubuntu-18.04
          xcode.version: ""
    pool:
      vmImage: $(imageName)
    steps:
      - bash: |
          sudo rm -rf /usr/local/*
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
        condition: eq(variables['Agent.OS'], 'Linux')
      - bash: PATH=$PATH:/home/linuxbrew/.linuxbrew/bin ./bot.sh test
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: brew-test-bot.xml
          mergeTestResults: true
          buildPlatform: $(imageName)
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: bottles-$(imageName)
          targetPath: $(Build.ArtifactStagingDirectory)
  - job: Publish
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/staging'))
    pool:
      vmImage: macos-10.14
    steps:
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: bottles-macos-10.13
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: bottles-macos-10.14
      - task: DownloadPipelineArtifact@0
        inputs:
          artifactName: bottles-ubuntu-18.04
      - bash: ./bot.sh upload
        env:
          BINTRAY_KEY: $(bintray.apiKey)
          GITHUB_DEPLOY_KEY: $(github.deployKey)
